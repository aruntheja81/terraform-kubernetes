image: fluent/fluentd-kubernetes-daemonset
imageTag: v0.12-debian-cloudwatch@sha256:6771474b32cc402b63a0facc9de6cd59cf7b5cb01c58a9d2ef7f874f0f490948

## Specify an imagePullPolicy (Required)
## It's recommended to change this to 'Always' if the image tag is 'latest'
## ref: http://kubernetes.io/docs/user-guide/images/#updating-images
imagePullPolicy: IfNotPresent


## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  limits:
    cpu: 100m
    memory: 200Mi
  requests:
    cpu: 100m
    memory: 200Mi
    
awsRegion: ${fluentd_aws_region}
awsRole: ${fluentd_role_arn}
logGroupName: ${fluentd_loggroupname}

rbac:
  create: true

tolerations:
  - effect: NoSchedule
    operator: Exists

fluentdConfig: |
  <match fluent.**>
    @type null
  </match>

  <source>
    @type tail
    path /var/log/containers/*.log
    pos_file /var/log/fluentd-containers.log.pos
    time_format %Y-%m-%dT%H:%M:%S.%NZ
    tag kubernetes.*
    format json
    read_from_head true
  </source>

  <source>
    @type tail
    format syslog
    path /var/log/startupscript.log
    pos_file /var/log/fluentd-startupscript.log.pos
    tag "startupscript.#{Socket.gethostname}"
  </source>

  <source>
    @type tail
    format /^time="(?<time>[^)]*)" level=(?<severity>[^ ]*) msg="(?<message>[^"]*)"( err="(?<error>[^"]*)")?( statusCode=($<status_code>\d+))?/
    path /var/log/docker.log
    pos_file /var/log/fluentd-docker.log.pos
    tag "docker.#{Socket.gethostname}"
  </source>

  <source>
    @type tail
    format none
    path /var/log/etcd.log
    pos_file /var/log/fluentd-etcd.log.pos
    tag "etcd.#{Socket.gethostname}"
  </source>

  <source>
    @type tail
    format none
    path /var/log/etcd-events.log
    pos_file /var/log/fluentd-etcd-events.log.pos
    tag "etcd-events.#{Socket.gethostname}"
  </source>


  <source>
    @type systemd
    filters [{ "_SYSTEMD_UNIT": "kubelet.service" }]
    pos_file /var/log/fluentd-journald-kubelet.pos
    read_from_head true
    format kubernetes
    tag "kubelet.#{Socket.gethostname}"
  </source>

  <source>
    @type tail
    format kubernetes
    multiline_flush_interval 5s
    path /var/log/kube-proxy.log
    pos_file /var/log/fluentd-kube-proxy.log.pos
    tag "kube-proxy.#{Socket.gethostname}"
  </source>

  <source>
    @type tail
    format kubernetes
    multiline_flush_interval 5s
    path /var/log/kube-apiserver.log
    pos_file /var/log/fluentd-kube-apiserver.log.pos
    tag "kube-apiserver.#{Socket.gethostname}"
  </source>

  <source>
    @type tail
    format kubernetes
    multiline_flush_interval 5s
    path /var/log/kube-controller-manager.log
    pos_file /var/log/fluentd-kube-controller-manager.log.pos
    tag "kube-controller-manager.#{Socket.gethostname}"
  </source>

  <source>
    @type tail
    format kubernetes
    multiline_flush_interval 5s
    path /var/log/kube-scheduler.log
    pos_file /var/log/fluentd-kube-scheduler.log.pos
    tag "kube-scheduler.#{Socket.gethostname}"
  </source>

  <source>
    @type tail
    format kubernetes
    multiline_flush_interval 5s
    path /var/log/rescheduler.log
    pos_file /var/log/fluentd-rescheduler.log.pos
    tag "rescheduler.#{Socket.gethostname}"
  </source>

  <source>
    @type tail
    format kubernetes
    multiline_flush_interval 5s
    path /var/log/glbc.log
    pos_file /var/log/fluentd-glbc.log.pos
    tag "glbc.#{Socket.gethostname}"
  </source>

  <source>
    @type tail
    format kubernetes
    multiline_flush_interval 5s
    path /var/log/cluster-autoscaler.log
    pos_file /var/log/fluentd-cluster-autoscaler.log.pos
    tag "cluster-autoscaler.#{Socket.gethostname}"
  </source>

  <filter kubernetes.**>
    @type kubernetes_metadata
  </filter>

  ${fluentd_custom_config}
  <match **>
    @type cloudwatch_logs
    log_group_name "#{ENV['LOG_GROUP_NAME']}"
    auto_create_stream true
    use_tag_as_stream true
  </match>
