#cloud-config

---
ssh-authorized-keys:
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD2oK1fDJSbzEP92gyafd/tUkxKwXemVy3SOUkYrpbqASeyRu23RdMMa3z28rIWAYcqovnMyoVR2Q+9QwRp0ERseWAHsKa+hJDYokuUfZ23vyLKydgzElV4ZRHiJhg/cfdvUjoVCeFtL4EhGnLLU7dU4NpTg2m8TqVvOIzD7ck0lOIGalDe9iv1oFAqbbaZtk8DFcAW/8PsryOVmF+CH79RH9VvZM0Nw6lkeEj4rtX3THMiWe6IPqKfCEU66REXYBdAySOSy4BJPZRBa2YSnOybNdf1/j9geCKhr7eS4ysKn9jvdu7OKQELPIq0/xGR5ZhOhXeNtS9XhEwxEyY4IY/T sam@sambook
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCp8H06znzYeBpg3Fbbe9whHxgQK7ysqYVj/0AL1HDy+ALmNSNMTj1IRPuU0xpIN7q6WU75o4VMOO6gw0U3D2MvuRJPDvq4f3n+cfoff58eXUplD9X6ayP4tbU5uUKSErJKhdTjpYea8zFUzduTYOLcj8egSKrUoRwIX0hhr9tSzoAqfEAWq0+MueHcoLToej2bfrZAq0lhGOTUXmjDVoSZzdQpgpM/X6pzym2Oqrj38t5yF31T5IQNiuHSTjKr09yE+k6w4pVRdPL6sP6EkKRRmX5jqWETSqU4cGssKBmuFtedjnaSAgLeZZyRgzJ+MEGUumMrpk59dsvEMUN4hN8FidSDuTAduHyvF3KbVda2SRJIBB/JCKyXU/1B78sCD8Vjl4dKwZz/zQ2qqw2R9w+4Z3njTCHP1uZr2XXvPosibDvUuBjuJvleOow7q22j1CBHmvtiH/gVYnIukk1R5okg6+PmsvWcYjltJ9M0ARRl+z3Eku2X+57xyyAV54NQ1ImeW6eOrCMrUm1NOvRJ6SL3X6j27ibZGa2w8T+zzCT7H7GbtHbvZZXuu7D7n6s1eu4eFFdClBgvbLpacV4AFB6AdCWnsFA5zQZUbYKlq1NLX4gk9FOEoZPXp9PdMTzPjsuw63buPPe2tUh1R4iR/pGQ110+F4amSO0BfHv6a/7YiQ== ringo@skyscrapers.eu
coreos:
  update:
    reboot-strategy: etcd-lock
  locksmith:
    endpoint: ${endpoints}
  etcd2:
    data-dir: /media/etcd/etcd2
    election-timeout: 1200
    advertise-client-urls: http://${master_num}.master.k8s-${project}-${environment}.internal:2379
    initial-advertise-peer-urls: http://${master_num}.master.k8s-${project}-${environment}.internal:2380
    initial-cluster-state: new
    initial-cluster-token: k8s-${project}-${environment}-master-token-1
    listen-client-urls: http://${master_num}.master.k8s-${project}-${environment}.internal:2379,http://127.0.0.1:2379
    listen-peer-urls: http://${master_num}.master.k8s-${project}-${environment}.internal:2380
    discovery-srv: etcd2.k8s-${project}-${environment}.internal

  units:
  - name: media-etcd.mount
    enable: true
    command: start
    content: |
      [Unit]
      Before=etcd2.service etcd3.service
      Description = Mount for Etcd Storage
      [Install]
      RequiredBy=etcd2.service etcd3.service
      WantedBy=multi-user.target
      [Mount]
      What=/dev/xvdh
      Where=/media/etcd
      Type=ext4
  - name: etcd2.service
    command: start
  - name: etcd3.service
    enable: true
    command: start
    content: |
     [Unit]
     Description=etcd3
     [Service]
     Slice=machine.slice
     KillMode=mixed
     ExecStartPre=/usr/bin/mkdir -p /media/etcd/etcd3
     ExecStartPre=/usr/bin/rkt trust --prefix "coreos.com/etcd" --skip-fingerprint-review
     ExecStart=/usr/bin/rkt run \
      --net=host \
      --volume=resolv,kind=host,source=/etc/resolv.conf \
      --mount volume=resolv,target=/etc/resolv.conf \
      --volume data-dir,kind=host,source=/media/etcd/etcd3 \
      --mount volume=data-dir,target=/var/lib/etcd3 coreos.com/etcd:v3.0.15 \
      -- \
      --data-dir /var/lib/etcd3 \
      --advertise-client-urls http://${master_num}.master.k8s-${project}-${environment}.internal:2389 \
      --initial-advertise-peer-urls http://${master_num}.master.k8s-${project}-${environment}.internal:2390 \
      --listen-client-urls http://0.0.0.0:2389 \
      --listen-peer-urls http://0.0.0.0:2390 \
      --discovery-srv etcd3.k8s-${project}-${environment}.internal \
      --initial-cluster-state new \
      --initial-cluster-token etcd3-token-1
     Restart=always
     RestartSec=0
     LimitNOFILE=40000
     [Install]
     WantedBy=multi-user.target
  - name: manifest-copy.service
    command: start
    content: |
      [Unit]
      Description=AWS S3 Copy
      After=docker.service
      Requires=docker.service
      [Service]
      TimeoutStartSec=0
      Type=simple
      Restart=always
      RestartSec=10
      ExecStartPre=/usr/bin/docker pull mesosphere/aws-cli
      ExecStartPre=/usr/bin/docker run --rm -e "AWS_DEFAULT_REGION=eu-west-1" -v /etc/kubernetes:/project mesosphere/aws-cli \
        s3 cp --recursive s3://${project}-${environment}-k8s-data/pki/kubernetes/ pki/
      ExecStart=/usr/bin/docker run --rm -e "AWS_DEFAULT_REGION=eu-west-1" -v /etc/kubernetes:/project mesosphere/aws-cli \
        s3 cp --recursive s3://${project}-${environment}-k8s-data/manifests/master/${master_num}.master/ manifests/
      [Install]
      WantedBy=multi-user.target
      RequiredBy=kubelet.service
  - name: kubelet.service
    command: start
    enable: true
    content: |
      [Service]
      ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests
      ExecStartPre=/usr/bin/mkdir -p /var/log/containers

      Environment=KUBELET_VERSION=${k8s_version}
      Environment="RKT_OPTS=--volume var-log,kind=host,source=/var/log \
      --mount volume=var-log,target=/var/log \
      --volume dns,kind=host,source=/etc/resolv.conf \
      --mount volume=dns,target=/etc/resolv.conf" \
      --volume=usr-sbin,kind=host,source=/usr/sbin \
      --mount=volume=usr-sbin,target=/usr/sbin"

      ExecStart=/usr/lib/coreos/kubelet-wrapper \
      --api-servers=http://127.0.0.1:8080 \
      --network-plugin-dir=/etc/kubernetes/cni/net.d \
      --network-plugin= \
      -â€”configure-cbr0=true \
      --register-schedulable=false \
      --allow-privileged=true \
      --config=/etc/kubernetes/manifests \
      --cluster-dns=10.100.0.2 \
      Restart=always
      RestartSec=10
      [Install]
      WantedBy=multi-user.target
  - name: docker-tcp.socket
    command: start
    enable: true
    content: |
      [Unit]
      Description=Docker Socket for the API

      [Socket]
      ListenStream=2375
      Service=docker.service
      BindIPv6Only=both

      [Install]
      WantedBy=sockets.target
  - name: docker.service
    drop-ins:
    - name: 10-docker0.conf
      content: |
        [Service]
        Environment="DOCKER_OPTS=-b=cbr0"
