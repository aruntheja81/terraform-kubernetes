---
apiVersion: kops/v1alpha2
kind: Cluster
metadata:
  name: ${name}
spec:
  kubelet:
    kubeReserved:
      cpu: ${kube_reserved_cpu}
      memory: ${kube_reserved_memory}
      ephemeral-storage: ${kube_reserved_es}
    kubeReservedCgroup: "/kube-reserved"
    systemReserved:
      cpu: ${system_reserved_cpu}
      memory: ${system_reserved_memory}
      ephemeral-storage: ${system_reserved_es}
    systemReservedCgroup: "/system-reserved"
    enforceNodeAllocatable: "pods"
    evictionHard: '${kubelet_eviction_hard}'
  api:
    loadBalancer:
      type: ${elb_type}
      idleTimeoutSeconds: 300
  authorization:
    rbac: {}
  channel: stable
  cloudProvider: aws
  configBase: s3://${k8s_data_bucket}/${name}
  etcdClusters:
  - etcdMembers:
${etcd_members_main}
    name: main
    ${etcd_version != "" ? "version: ${etcd_version}" : ""}
  - etcdMembers:
${etcd_members_events}
    name: events
    ${etcd_version != "" ? "version: ${etcd_version}" : ""}
  kubernetesApiAccess:
  - 0.0.0.0/0
  kubeAPIServer:
    oidcIssuerURL: ${oidc_issuer_url}
    oidcClientID: kubesignin
    oidcUsernameClaim: email
    oidcGroupsClaim: groups
    runtimeConfig:
      "batch/v2alpha1": "true"
  kubernetesVersion: ${k8s_version}
  masterInternalName: api.internal.${name}
  masterPublicName: api.${name}
  networkCIDR: ${vpc_cidr}
  networkID: ${vpc_id}
  networking:
    calico:
      crossSubnet: true
      logSeverityScreen: ${calico_logseverity}
      prometheusMetricsEnabled: true
  nonMasqueradeCIDR: 100.64.0.0/10
  sshAccess:
  - ${bastion_cidr}
  subnets:
${master_subnets}
${worker_subnets}
${utility_subnets}
  topology:
    dns:
      type: Public
    masters: private
    nodes: private
